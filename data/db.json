{
  "cards": [
    {
      "id": 1,
      "question": "What is JavaScript?",
      "answer": "JavaScript is a programming language that enables interactive web pages.",
      "status": "Noted",
      "lastModified": "2023-12-17T12:30:00Z"
    },
    {
      "question": "What is HTML?",
      "answer": "HTML (Hypertext Markup Language) is the standard markup language for documents designed to be displayed in a web browser.",
      "status": "Want to Learn",
      "lastModified": "2023-12-25T22:11:57.365Z",
      "id": 2
    },
    {
      "id": 3,
      "question": "Explain the concept of React components.",
      "answer": "React components are reusable, self-contained building blocks that render output based on their input props.",
      "status": "Learned",
      "lastModified": "2023-12-15T10:20:00Z"
    },
    {
      "id": 4,
      "question": "What is the purpose of CSS?",
      "answer": "CSS (Cascading Style Sheets) is used to style the layout of web pages and enhance their visual presentation.",
      "status": "Noted",
      "lastModified": "2023-12-14T16:55:00Z"
    },
    {
      "id": 5,
      "question": "How does the 'useState' hook work in React?",
      "answer": "The 'useState' hook allows functional components to manage state by providing a state variable and a function to update it.",
      "status": "Want to Learn",
      "lastModified": "2023-12-13T08:45:00Z"
    },
    {
      "id": 6,
      "question": "What is the purpose of the 'map' function in JavaScript?",
      "answer": "The 'map' function is used to iterate over elements of an array and perform a callback function on each element, returning a new array of the results.",
      "status": "Learned",
      "lastModified": "2023-12-12T20:15:00Z"
    },
    {
      "id": 7,
      "question": "Explain the concept of responsive web design.",
      "answer": "Responsive web design ensures that web applications work well on a variety of devices and window or screen sizes.",
      "status": "Noted",
      "lastModified": "2023-12-11T14:10:00Z"
    },
    {
      "id": 8,
      "question": "What is the 'box model' in CSS?",
      "answer": "The box model in CSS describes the layout of elements, including content, padding, border, and margin.",
      "status": "Want to Learn",
      "lastModified": "2023-12-10T11:25:00Z"
    },
    {
      "id": 9,
      "question": "What is the purpose of the 'useEffect' hook in React?",
      "answer": "The 'useEffect' hook is used for side effects in functional components, such as data fetching or subscriptions.",
      "status": "Learned",
      "lastModified": "2023-12-09T18:30:00Z"
    },
    {
      "question": "Explain the difference between 'let', 'const', and 'var' in JavaScript.",
      "answer": "'let' and 'const' are block-scoped declarations, while 'var' is function-scoped. 'const' cannot be reassigned after declaration, but 'let' and 'var' can.",
      "status": "Want to Learn",
      "lastModified": "2023-12-25T22:52:41.542Z",
      "id": 10
    },
    {
      "id": 11,
      "question": "What is the purpose of the 'fetch' function in JavaScript?",
      "answer": "The 'fetch' function is used to make network requests and is commonly used to fetch data from APIs.",
      "status": "Want to Learn",
      "lastModified": "2023-12-08T21:30:00Z"
    },
    {
      "id": 12,
      "question": "What is the difference between '=='' and '===' in JavaScript?",
      "answer": "'==' is the equality operator that performs type coercion, while '===' is the strict equality operator that checks both value and type.",
      "status": "Learned",
      "lastModified": "2023-12-07T19:15:00Z"
    },
    {
      "id": 13,
      "question": "Explain the concept of event delegation in JavaScript.",
      "answer": "Event delegation is a technique where a single event listener is attached to a common ancestor of multiple elements, allowing handling events for multiple children with a single listener.",
      "status": "Noted",
      "lastModified": "2023-12-06T17:50:00Z"
    },
    {
      "id": 14,
      "question": "What is the purpose of the 'async/await' syntax in JavaScript?",
      "answer": "The 'async/await' syntax is used to work with asynchronous code in a more synchronous-like manner, making it easier to read and maintain.",
      "status": "Want to Learn",
      "lastModified": "2023-12-05T14:25:00Z"
    },
    {
      "id": 15,
      "question": "Explain the concept of the virtual DOM in React.",
      "answer": "The virtual DOM is a lightweight copy of the real DOM that React uses to optimize updates by minimizing direct manipulation of the actual DOM.",
      "status": "Learned",
      "lastModified": "2023-12-04T11:40:00Z"
    },
    {
      "id": 16,
      "question": "What is the purpose of the 'localStorage' in web development?",
      "answer": "'localStorage' is a web storage object that allows saving key/value pairs in a web browser with no expiration time.",
      "status": "Noted",
      "lastModified": "2023-12-03T18:55:00Z"
    },
    {
      "id": 17,
      "question": "How can you prevent default behavior in an event handler in JavaScript?",
      "answer": "You can prevent the default behavior of an event by calling the 'preventDefault()' method on the event object.",
      "status": "Want to Learn",
      "lastModified": "2023-12-02T16:20:00Z"
    },
    {
      "id": 18,
      "question": "Explain the concept of 'this' in JavaScript.",
      "answer": "'this' refers to the current execution context in JavaScript, and its value can vary depending on how a function is called.",
      "status": "Learned",
      "lastModified": "2023-12-01T13:35:00Z"
    },
    {
      "id": 19,
      "question": "What is the purpose of the 'Router' component in React?",
      "answer": "The 'Router' component is used for declarative navigation and rendering of UI components based on the current URL in a React application.",
      "status": "Noted",
      "lastModified": "2023-11-30T19:45:00Z"
    },
    {
      "id": 20,
      "question": "How do you define a functional component in React?",
      "answer": "A functional component in React is defined as a JavaScript function that takes props as an argument and returns React elements.",
      "status": "Want to Learn",
      "lastModified": "2023-11-29T22:55:00Z"
    },
    {
      "id": 21,
      "question": "What is the 'spread operator' in JavaScript?",
      "answer": "The spread operator (...) in JavaScript is used to spread the elements of an iterable (like an array or object) into a new array or object.",
      "status": "Learned",
      "lastModified": "2023-11-28T23:15:00Z"
    },
    {
      "id": 22,
      "question": "Explain the purpose of the 'redux' library in React applications.",
      "answer": "'redux' is a state management library for JavaScript applications, commonly used with React to manage global state in a predictable way.",
      "status": "Noted",
      "lastModified": "2023-11-27T20:30:00Z"
    },
    {
      "id": 23,
      "question": "How do you handle forms in React?",
      "answer": "In React, forms are typically controlled components, where form elements are controlled by React state to manage user input.",
      "status": "Want to Learn",
      "lastModified": "2023-11-26T17:45:00Z"
    },
    {
      "id": 24,
      "question": "What is the purpose of the 'useReducer' hook in React?",
      "answer": "The 'useReducer' hook in React is used for managing more complex state logic by dispatching actions to update the state based on a reducer function.",
      "status": "Learned",
      "lastModified": "2023-11-25T14:50:00Z"
    },
    {
      "id": 25,
      "question": "Explain the concept of 'memoization' in JavaScript.",
      "answer": "Memoization is an optimization technique that involves caching the results of expensive function calls to improve performance by avoiding redundant computations.",
      "status": "Noted",
      "lastModified": "2023-11-24T12:05:00Z"
    },
    {
      "id": 26,
      "question": "What is the purpose of the 'CORS' policy in web development?",
      "answer": "The 'CORS' (Cross-Origin Resource Sharing) policy is a security feature implemented by web browsers to restrict web pages from making requests to a different domain than the one that served the web page.",
      "status": "Want to Learn",
      "lastModified": "2023-11-23T09:20:00Z"
    },
    {
      "id": 27,
      "question": "Explain the concept of 'hoisting' in JavaScript.",
      "answer": "'Hoisting' is a JavaScript behavior where variable and function declarations are moved to the top of their containing scope during the compilation phase.",
      "status": "Learned",
      "lastModified": "2023-11-22T06:35:00Z"
    },
    {
      "id": 28,
      "question": "What is the purpose of the 'axios' library in JavaScript?",
      "answer": "'axios' is a popular JavaScript library used for making HTTP requests and handling responses in web applications.",
      "status": "Noted",
      "lastModified": "2023-11-21T03:50:00Z"
    },
    {
      "id": 29,
      "question": "How can you handle authentication in a React application?",
      "answer": "Authentication in a React application can be handled by using techniques such as JSON Web Tokens (JWT) and storing tokens in local storage or cookies.",
      "status": "Want to Learn",
      "lastModified": "2023-11-20T01:05:00Z"
    },
    {
      "id": 30,
      "question": "Explain the concept of 'callback functions' in JavaScript.",
      "answer": "A 'callback function' is a function passed as an argument to another function, which will be invoked at a later time, often in response to an event.",
      "status": "Learned",
      "lastModified": "2023-11-19T22:20:00Z"
    },
    {
      "id": 31,
      "question": "What is the purpose of the 'Promise' object in JavaScript?",
      "answer": "A 'Promise' in JavaScript is an object representing the eventual completion or failure of an asynchronous operation and its resulting value.",
      "status": "Noted",
      "lastModified": "2023-11-18T19:35:00Z"
    },
    {
      "id": 32,
      "question": "How can you handle state in a functional component in React?",
      "answer": "State in functional components can be managed using the 'useState' hook, which provides a state variable and a function to update it.",
      "status": "Want to Learn",
      "lastModified": "2023-11-17T16:50:00Z"
    },
    {
      "id": 33,
      "question": "Explain the concept of 'JWT' (JSON Web Token) in web development.",
      "answer": "'JWT' is a compact, URL-safe means of representing claims to be transferred between two parties, often used for authentication and information exchange.",
      "status": "Learned",
      "lastModified": "2023-11-16T14:05:00Z"
    },
    {
      "id": 34,
      "question": "What is the purpose of the 'useContext' hook in React?",
      "answer": "The 'useContext' hook in React is used to subscribe to React context without introducing nesting in your component tree.",
      "status": "Noted",
      "lastModified": "2023-11-15T11:20:00Z"
    },
    {
      "id": 35,
      "question": "How does the 'debounce' function work in JavaScript?",
      "answer": "The 'debounce' function is used to delay the execution of a function until after a certain period of inactivity, often used in scenarios like handling user input.",
      "status": "Want to Learn",
      "lastModified": "2023-11-14T08:35:00Z"
    },
    {
      "id": 36,
      "question": "Explain the concept of 'serverless' architecture.",
      "answer": "'Serverless' architecture is a cloud computing execution model where cloud providers automatically manage the infrastructure, allowing developers to focus on writing code without worrying about server management.",
      "status": "Learned",
      "lastModified": "2023-11-13T05:50:00Z"
    },
    {
      "id": 37,
      "question": "What is the purpose of the 'classnames' library in React?",
      "answer": "'classnames' is a utility for conditionally joining class names together in a React application, making it easier to dynamically apply styles based on different conditions.",
      "status": "Noted",
      "lastModified": "2023-11-12T03:05:00Z"
    },
    {
      "id": 38,
      "question": "How can you optimize performance in a React application?",
      "answer": "Performance optimization in a React application involves techniques such as code splitting, lazy loading, using memoization, and optimizing component rendering.",
      "status": "Want to Learn",
      "lastModified": "2023-11-11T00:20:00Z"
    },
    {
      "id": 39,
      "question": "Explain the concept of 'prop drilling' in React.",
      "answer": "'Prop drilling' occurs when you need to pass data from a high-level component to a deep-nested child component by passing the data through intermediary components in the hierarchy.",
      "status": "Learned",
      "lastModified": "2023-11-10T21:35:00Z"
    },
    {
      "id": 40,
      "question": "What is the purpose of the 'useMemo' hook in React?",
      "answer": "The 'useMemo' hook in React is used to memoize the result of a computation, preventing unnecessary re-execution of that computation in subsequent renders.",
      "status": "Noted",
      "lastModified": "2023-11-09T18:50:00Z"
    },
    {
      "id": 41,
      "question": "Explain the concept of 'WebSockets' in web development.",
      "answer": "'WebSockets' is a communication protocol that provides full-duplex communication channels over a single TCP connection, enabling real-time data transfer between clients and servers.",
      "status": "Want to Learn",
      "lastModified": "2023-11-08T16:05:00Z"
    },
    {
      "id": 42,
      "question": "What is the purpose of the 'useEffect' hook with an empty dependency array in React?",
      "answer": "The 'useEffect' hook with an empty dependency array in React is used for running effects that don't depend on any values from the component's state or props, ensuring the effect runs only once after the initial render.",
      "status": "Learned",
      "lastModified": "2023-11-07T13:20:00Z"
    },
    {
      "id": 43,
      "question": "Explain the concept of 'GraphQL' in web development.",
      "answer": "'GraphQL' is a query language for APIs that provides a more efficient, powerful, and flexible alternative to traditional REST APIs by allowing clients to request only the data they need.",
      "status": "Noted",
      "lastModified": "2023-11-06T10:35:00Z"
    },
    {
      "id": 44,
      "question": "How does the 'localStorage' differ from 'sessionStorage' in web development?",
      "answer": "'localStorage' and 'sessionStorage' are both web storage objects, but 'localStorage' persists data with no expiration time, while 'sessionStorage' persists data only for the duration of the page session.",
      "status": "Want to Learn",
      "lastModified": "2023-11-05T07:50:00Z"
    },
    {
      "id": 45,
      "question": "What is the purpose of the 'axios' interceptors in JavaScript?",
      "answer": "'axios' interceptors are functions that can be run before a request is sent or after a response is received, allowing you to modify requests or responses globally in your application.",
      "status": "Learned",
      "lastModified": "2023-11-04T05:05:00Z"
    },
    {
      "id": 46,
      "question": "Explain the concept of 'container components' in React.",
      "answer": "'Container components' in React are components responsible for managing state and behavior, while presentational components focus on rendering UI based on props.",
      "status": "Noted",
      "lastModified": "2023-11-03T02:20:00Z"
    },
    {
      "id": 47,
      "question": "What is the purpose of the 'async/await' syntax in JavaScript promises?",
      "answer": "The 'async/await' syntax in JavaScript is used to work with promises in a more synchronous-like manner, making asynchronous code easier to read and write.",
      "status": "Want to Learn",
      "lastModified": "2023-11-02T23:35:00Z"
    },
    {
      "id": 48,
      "question": "How can you handle routing in a React application?",
      "answer": "Routing in a React application can be handled using libraries like 'react-router-dom,' which provides components and hooks for declarative navigation based on the URL.",
      "status": "Learned",
      "lastModified": "2023-11-01T20:50:00Z"
    },
    {
      "id": 49,
      "question": "Explain the purpose of the 'WebSocket API' in web development.",
      "answer": "The 'WebSocket API' in web development provides a set of interfaces and methods for creating and managing WebSocket connections, enabling real-time bidirectional communication between clients and servers.",
      "status": "Noted",
      "lastModified": "2023-10-31T18:05:00Z"
    },
    {
      "id": 50,
      "question": "What is the purpose of the 'useRef' hook in React?",
      "answer": "The 'useRef' hook in React is used for accessing and interacting with a DOM element or a functional component instance, providing a way to persist values across renders without causing re-renders.",
      "status": "Want to Learn",
      "lastModified": "2023-10-30T15:20:00Z"
    },
    {
      "id": 51,
      "question": "Explain the concept of 'JWT' (JSON Web Token) authentication in web development.",
      "answer": "'JWT' authentication involves the use of JSON Web Tokens to securely transmit information between parties, commonly used for user authentication in web applications.",
      "status": "Learned",
      "lastModified": "2023-10-29T12:35:00Z"
    },
    {
      "id": 52,
      "question": "How can you handle form validation in a React application?",
      "answer": "Form validation in a React application can be handled by using controlled components, Yup schema validation, or form validation libraries like 'react-hook-form.'",
      "status": "Noted",
      "lastModified": "2023-10-28T09:50:00Z"
    },
    {
      "id": 53,
      "question": "What is the purpose of the 'Redux Thunk' middleware in a Redux store?",
      "answer": "'Redux Thunk' is middleware for handling asynchronous actions in a Redux store, allowing action creators to return functions instead of plain action objects.",
      "status": "Want to Learn",
      "lastModified": "2023-10-27T07:05:00Z"
    },
    {
      "id": 54,
      "question": "Explain the concept of 'HOC' (Higher Order Component) in React.",
      "answer": "'HOC' in React is a function that takes a component and returns a new component with additional props or behavior, promoting reusability and composability.",
      "status": "Learned",
      "lastModified": "2023-10-26T04:20:00Z"
    },
    {
      "id": 55,
      "question": "What is the purpose of the 'localStorage' in web development?",
      "answer": "'localStorage' is a web storage object that allows saving key/value pairs in a web browser with no expiration time.",
      "status": "Noted",
      "lastModified": "2023-10-25T01:35:00Z"
    },
    {
      "id": 56,
      "question": "How does the 'debounce' function work in JavaScript?",
      "answer": "The 'debounce' function is used to delay the execution of a function until after a certain period of inactivity, often used in scenarios like handling user input.",
      "status": "Want to Learn",
      "lastModified": "2023-10-24T22:50:00Z"
    },
    {
      "id": 57,
      "question": "Explain the concept of 'serverless' architecture.",
      "answer": "'Serverless' architecture is a cloud computing execution model where cloud providers automatically manage the infrastructure, allowing developers to focus on writing code without worrying about server management.",
      "status": "Learned",
      "lastModified": "2023-10-23T20:05:00Z"
    },
    {
      "id": 58,
      "question": "What is the purpose of the 'classnames' library in React?",
      "answer": "'classnames' is a utility for conditionally joining class names together in a React application, making it easier to dynamically apply styles based on different conditions.",
      "status": "Noted",
      "lastModified": "2023-10-22T17:20:00Z"
    },
    {
      "id": 59,
      "question": "How can you optimize performance in a React application?",
      "answer": "Performance optimization in a React application involves techniques such as code splitting, lazy loading, using memoization, and optimizing component rendering.",
      "status": "Want to Learn",
      "lastModified": "2023-10-21T14:35:00Z"
    },
    {
      "id": 60,
      "question": "Explain the concept of 'prop drilling' in React.",
      "answer": "'Prop drilling' occurs when you need to pass data from a high-level component to a deep-nested child component by passing the data through intermediary components in the hierarchy.",
      "status": "Learned",
      "lastModified": "2023-10-20T11:50:00Z"
    }
  ]
}